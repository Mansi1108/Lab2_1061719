Gramática

    0 $accept: bexprP $end

    1 bexprP: bexprP bexpr '\n'
    2       | bexprP '\n'
    3       | /* vacío */

    4 bexpr: bexpr OR bterm
    5      | bterm

    6 bterm: bterm AND bfactor
    7      | bfactor

    8 bfactor: NOT bfactor
    9        | '(' bexpr ')'
   10        | BOOLEAN


Terminales con las reglas donde aparecen

$end (0) 0
'\n' (10) 1 2
'(' (40) 9
')' (41) 9
error (256)
NOT (258) 8
OR (259) 4
AND (260) 6
BOOLEAN (261) 10


No terminales con las reglas donde aparecen

$accept (10)
    en la izquierda: 0
bexprP (11)
    en la izquierda: 1 2 3, en la derecha: 0 1 2
bexpr (12)
    en la izquierda: 4 5, en la derecha: 1 4 9
bterm (13)
    en la izquierda: 6 7, en la derecha: 4 5 6
bfactor (14)
    en la izquierda: 8 9 10, en la derecha: 6 7 8


estado 0

    0 $accept: . bexprP $end

    $default  reduce usando la regla 3 (bexprP)

    bexprP  ir al estado 1


estado 1

    0 $accept: bexprP . $end
    1 bexprP: bexprP . bexpr '\n'
    2       | bexprP . '\n'

    $end     desplazar e ir al estado 2
    NOT      desplazar e ir al estado 3
    BOOLEAN  desplazar e ir al estado 4
    '\n'     desplazar e ir al estado 5
    '('      desplazar e ir al estado 6

    bexpr    ir al estado 7
    bterm    ir al estado 8
    bfactor  ir al estado 9


estado 2

    0 $accept: bexprP $end .

    $default  aceptar


estado 3

    8 bfactor: NOT . bfactor

    NOT      desplazar e ir al estado 3
    BOOLEAN  desplazar e ir al estado 4
    '('      desplazar e ir al estado 6

    bfactor  ir al estado 10


estado 4

   10 bfactor: BOOLEAN .

    $default  reduce usando la regla 10 (bfactor)


estado 5

    2 bexprP: bexprP '\n' .

    $default  reduce usando la regla 2 (bexprP)


estado 6

    9 bfactor: '(' . bexpr ')'

    NOT      desplazar e ir al estado 3
    BOOLEAN  desplazar e ir al estado 4
    '('      desplazar e ir al estado 6

    bexpr    ir al estado 11
    bterm    ir al estado 8
    bfactor  ir al estado 9


estado 7

    1 bexprP: bexprP bexpr . '\n'
    4 bexpr: bexpr . OR bterm

    OR    desplazar e ir al estado 12
    '\n'  desplazar e ir al estado 13


estado 8

    5 bexpr: bterm .
    6 bterm: bterm . AND bfactor

    AND  desplazar e ir al estado 14

    $default  reduce usando la regla 5 (bexpr)


estado 9

    7 bterm: bfactor .

    $default  reduce usando la regla 7 (bterm)


estado 10

    8 bfactor: NOT bfactor .

    $default  reduce usando la regla 8 (bfactor)


estado 11

    4 bexpr: bexpr . OR bterm
    9 bfactor: '(' bexpr . ')'

    OR   desplazar e ir al estado 12
    ')'  desplazar e ir al estado 15


estado 12

    4 bexpr: bexpr OR . bterm

    NOT      desplazar e ir al estado 3
    BOOLEAN  desplazar e ir al estado 4
    '('      desplazar e ir al estado 6

    bterm    ir al estado 16
    bfactor  ir al estado 9


estado 13

    1 bexprP: bexprP bexpr '\n' .

    $default  reduce usando la regla 1 (bexprP)


estado 14

    6 bterm: bterm AND . bfactor

    NOT      desplazar e ir al estado 3
    BOOLEAN  desplazar e ir al estado 4
    '('      desplazar e ir al estado 6

    bfactor  ir al estado 17


estado 15

    9 bfactor: '(' bexpr ')' .

    $default  reduce usando la regla 9 (bfactor)


estado 16

    4 bexpr: bexpr OR bterm .
    6 bterm: bterm . AND bfactor

    AND  desplazar e ir al estado 14

    $default  reduce usando la regla 4 (bexpr)


estado 17

    6 bterm: bterm AND bfactor .

    $default  reduce usando la regla 6 (bterm)
